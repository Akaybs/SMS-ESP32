#include <WiFi.h>
#include <HTTPClient.h>
#include <ArduinoJson.h>
#include <HardwareSerial.h>

const char *ssid = "HOANG WIFI";
const char *password = "hhhhhhh1";

String apiGetUrl = "https://render.com/roitai";
String apiPostUrl = "https://render.com/update-sms";

HardwareSerial sim800(1);
#define SIM800_TX 17
#define SIM800_RX 16
#define SIM800_BAUD 115200

// LED tr·∫°ng th√°i
#define LED_PIN 2
bool blinkLed = false;
unsigned long lastBlinkTime = 0;
bool ledState = false;

unsigned long lastCheckTime = 0;
const unsigned long checkInterval = 60000;

// Bi·∫øn ƒë·∫øm l·ªói API v√† qu·∫£n l√Ω reset
int apiErrorCount = 0;
unsigned long lastRestartTime = 0;
const unsigned long restartInterval = 30UL * 60UL * 1000UL; // 30 ph√∫t

// ================== H√ÄM X·ª¨ L√ù CHU·ªñI ==================
String removeVietnameseAccents(String str)
{
  const char *find[] = {"√°", "√†", "·∫£", "√£", "·∫°", "ƒÉ", "·∫Ø", "·∫±", "·∫≥", "·∫µ", "·∫∑", "√¢", "·∫•", "·∫ß", "·∫©", "·∫´", "·∫≠",
                        "ƒë",
                        "√©", "√®", "·∫ª", "·∫Ω", "·∫π", "√™", "·∫ø", "·ªÅ", "·ªÉ", "·ªÖ", "·ªá",
                        "√≠", "√¨", "·ªâ", "ƒ©", "·ªã",
                        "√≥", "√≤", "·ªè", "√µ", "·ªç", "√¥", "·ªë", "·ªì", "·ªï", "·ªó", "·ªô", "∆°", "·ªõ", "·ªù", "·ªü", "·ª°", "·ª£",
                        "√∫", "√π", "·ªß", "≈©", "·ª•", "∆∞", "·ª©", "·ª´", "·ª≠", "·ªØ", "·ª±",
                        "√Ω", "·ª≥", "·ª∑", "·ªπ", "·ªµ",
                        "√Å", "√Ä", "·∫¢", "√É", "·∫†", "ƒÇ", "·∫Æ", "·∫∞", "·∫≤", "·∫¥", "·∫∂", "√Ç", "·∫§", "·∫¶", "·∫®", "·∫™", "·∫¨",
                        "ƒê",
                        "√â", "√à", "·∫∫", "·∫º", "·∫∏", "√ä", "·∫æ", "·ªÄ", "·ªÇ", "·ªÑ", "·ªÜ",
                        "√ç", "√å", "·ªà", "ƒ®", "·ªä",
                        "√ì", "√í", "·ªé", "√ï", "·ªå", "√î", "·ªê", "·ªí", "·ªî", "·ªñ", "·ªò", "∆†", "·ªö", "·ªú", "·ªû", "·ª†", "·ª¢",
                        "√ö", "√ô", "·ª¶", "≈®", "·ª§", "∆Ø", "·ª®", "·ª™", "·ª¨", "·ªÆ", "·ª∞",
                        "√ù", "·ª≤", "·ª∂", "·ª∏", "·ª¥"};
  const char *repl[] = {"a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a", "a",
                        "d",
                        "e", "e", "e", "e", "e", "e", "e", "e", "e", "e", "e",
                        "i", "i", "i", "i", "i",
                        "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o", "o",
                        "u", "u", "u", "u", "u", "u", "u", "u", "u", "u", "u",
                        "y", "y", "y", "y", "y",
                        "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A", "A",
                        "D",
                        "E", "E", "E", "E", "E", "E", "E", "E", "E", "E", "E",
                        "I", "I", "I", "I", "I",
                        "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O",
                        "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U",
                        "Y", "Y", "Y", "Y", "Y"};
  for (int i = 0; i < sizeof(find) / sizeof(find[0]); i++)
  {
    str.replace(find[i], repl[i]);
    String findUpper = String(find[i]);
    findUpper.toUpperCase();
    String replUpper = String(repl[i]);
    replUpper.toUpperCase();
    str.replace(findUpper, replUpper);
  }
  return str;
}

String formatMoney(long money)
{
  String s = String(money);
  String res = "";
  int len = s.length();
  int count = 0;
  for (int i = len - 1; i >= 0; i--)
  {
    res = s.charAt(i) + res;
    count++;
    if (count == 3 && i != 0)
    {
      res = "." + res;
      count = 0;
    }
  }
  return res;
}

// ================== G·ª¨I SMS ==================
bool sendSMS(String phoneNumber, String message)
{
  sim800.println("AT+CMGF=1");
  delay(500);
  sim800.print("AT+CMGS=\"");
  sim800.print(phoneNumber);
  sim800.println("\"");
  delay(500);
  sim800.print(message);
  delay(500);
  sim800.write(26);

  String response = "";
  unsigned long start = millis();
  while (millis() - start < 5000)
  {
    while (sim800.available())
    {
      char c = sim800.read();
      response += c;
    }
    if (response.indexOf("+CMGS:") != -1)
    {
      Serial.println("üì• [Phan hoi Module 4G] " + response);
      blinkLed = false; // Kh√¥ng l·ªói => t·∫Øt nh·∫•p nh√°y
      digitalWrite(LED_PIN, LOW);
      return true;
    }
    if (response.indexOf("ERROR") != -1)
    {
      Serial.println("üì• [Phan hoi Module 4G] " + response);
      blinkLed = true; // L·ªói module 4G => nh·∫•p nh√°y LED
      return false;
    }
  }
  Serial.println("üì• [Phan hoi Module 4G] " + response);
  blinkLed = true; // Timeout => nh·∫•p nh√°y LED
  return false;
}

// ================== C·∫¨P NH·∫¨T TR·∫†NG TH√ÅI ==================
bool updateSMSStatus(String id, String status)
{
  if (WiFi.status() == WL_CONNECTED)
  {
    HTTPClient http;
    http.begin(apiPostUrl);
    http.addHeader("Content-Type", "application/json");
    String jsonPayload = "{\"id\":\"" + id + "\",\"status\":\"" + status + "\"}";
    int httpCode = http.POST(jsonPayload);
    Serial.println("üìå [Cap nhat SMS] Ma HTTP: " + String(httpCode));
    String payload = http.getString();
    Serial.println("üìå [Cap nhat SMS] Phan hoi: " + payload);
    http.end();
    return (httpCode == 200);
  }
  return false;
}

// ================== L·∫§Y D·ªÆ LI·ªÜU API & G·ª¨I SMS ==================
void checkAndSendSMS()
{
  if (WiFi.status() == WL_CONNECTED)
  {

    HTTPClient http;
    http.begin(apiGetUrl);
    int httpCode = http.GET();

    if (httpCode == 200)
    {
      apiErrorCount = 0;          // reset l·ªói khi API th√†nh c√¥ng
      digitalWrite(LED_PIN, LOW); // API OK => t·∫Øt LED
      blinkLed = false;

      String payload = http.getString();
      Serial.println("üì• [Phan hoi API] " + payload);

      DynamicJsonDocument doc(4096);
      DeserializationError error = deserializeJson(doc, payload);

      if (!error && doc.is<JsonArray>())
      {
        for (JsonObject obj : doc.as<JsonArray>())
        {
          String id = String((int)obj["id"]);
          String name = obj["name"].as<String>();
          String phone = obj["phone"].as<String>();
          String iphone = obj["iphone"].as<String>();
          String imei = obj["imei"].as<String>();
          String loi = obj["loi"].as<String>();
          String tienText = obj["tienText"].as<String>();
          String thanhtoan = obj["thanhtoan"].as<String>();
          String thoigian = obj["thoigian"].as<String>();
          String totalDebt = String((int)obj["totalDebt"]);
          int soLuongNo = obj["soLuongNo"];
          tienText.replace("‚Ç´", "VND");
          tienText = removeVietnameseAccents(tienText);
          loi.replace("‚Ç´", "VND");
          loi = removeVietnameseAccents(loi);
          long totalDebtValue = totalDebt.toInt();
          String smsContent;
          String smsStatus = obj["sms"].as<String>();

          if (smsStatus == "Send" && thanhtoan == "TT")
          {
            smsContent = "TB: " + name + "\n" +
                         "Ban da " + loi + "\n";
            if (totalDebtValue == 0)
            {
              smsContent += "Time: " + thoigian + "\n";
            }
            else
            {
              smsContent += "Time: " + thoigian + "\n";
              smsContent += "TONG NO: " + formatMoney(totalDebtValue) + " VND\n";
            }
            smsContent += "https://hoanglsls.web.app";
          }
          else if (thanhtoan == "Ok" && smsStatus == "Yes")
          {
            if (totalDebtValue == 0)
            {
              smsContent =
                  "ID:" + id + " " + name + "\n" +
                  "Thanh toan thanh cong\n" +
                  "May: " + iphone + "\n" +
                  "Imei: " + imei + "\n" +
                  "Loi: " + loi + "\n" +
                  "Tien: " + tienText + "\n" +
                  "T.Toan: " + thanhtoan + "\n" +
                  "Time: " + thoigian + "\n";
            }
            else
            {
              smsContent =
                  "ID:" + id + " " + name + "\n" +
                  "May: " + iphone + "\n" +
                  "Imei: " + imei + "\n" +
                  "Loi: " + loi + "\n" +
                  "Tien: " + tienText + "\n" +
                  "T.Toan: " + thanhtoan + "\n" +
                  "Time: " + thoigian + "\n" +
                  "Tong no (" + String(soLuongNo) + " may): " + formatMoney(totalDebtValue) + " VND\n";
            }
          }
          else
          {
            smsContent =
                "ID:" + id + " " + name + "\n" +
                "May: " + iphone + "\n" +
                "Imei: " + imei + "\n" +
                "Loi: " + loi + "\n" +
                "Tien: " + tienText + "\n" +
                "T.Toan: " + thanhtoan + "\n" +
                "Time: " + thoigian + "\n" +
                "Tong no (" + String(soLuongNo) + " may): " + formatMoney(totalDebtValue) + " VND";
          }

          smsContent = removeVietnameseAccents(smsContent);
          Serial.println("üìå [Xem truoc SMS]\n" + smsContent);

          bool success = sendSMS(phone, smsContent);
          String newStatus = success ? "Done" : "Error";
          Serial.println(success ? "‚úÖ Sending SMS to: " + phone
                                 : "‚ùå Sending SMS Error to: " + phone);

          bool updated = false;
          for (int attempt = 1; attempt <= 3; attempt++)
          {
            if (updateSMSStatus(id, newStatus))
            {
              Serial.println("‚úÖ Cap nhat trang thai '" + newStatus + "' thanh cong (lan " + String(attempt) + ")");
              updated = true;
              break;
            }
            if (attempt < 3)
            {
              Serial.println("‚ö† Lan " + String(attempt) + " that bai, thu lai sau 10 giay...");
              delay(10000);
            }
          }
          if (!updated)
          {
            Serial.println("‚ùå Khong the cap nhat trang thai '" + newStatus + "' sau 3 lan tha");
          }

          delay(5000);
        }
      }
    }
    else
    {
      Serial.println("‚ùå [Error] API GET that bai, ma: " + String(httpCode));
      digitalWrite(LED_PIN, HIGH); // L·ªói GET => s√°ng LED li√™n t·ª•c
      blinkLed = false;
      apiErrorCount++;
      Serial.println("‚ö† So lan loi API lien tiep: " + String(apiErrorCount));

      // N·∫øu ƒë√£ qu√° 5 l·∫ßn l·ªói v√† c√°ch l·∫ßn restart g·∫ßn nh·∫•t > 30 ph√∫t
      if (apiErrorCount >= 5 && millis() - lastRestartTime > restartInterval)
      {
        Serial.println("üö® Qua 5 lan loi API, khoi dong lai ESP32...");
        delay(2000); // Cho in log ra Serial
        lastRestartTime = millis();
        ESP.restart();
      }
    }
    http.end();
  }
}

// ================== SETUP ==================
void setup()
{
  Serial.begin(115200);
  pinMode(LED_PIN, OUTPUT);
  digitalWrite(LED_PIN, LOW);

  WiFi.begin(ssid, password);
  Serial.print("üì• Connecting to WiFi");
  while (WiFi.status() != WL_CONNECTED)
  {
    delay(500);
    Serial.print(".");
  }
  Serial.println("‚úÖ WiFi connected Ok!");

  sim800.begin(SIM800_BAUD, SERIAL_8N1, SIM800_RX, SIM800_TX);
  Serial.println("üìå Module 4G Ok");

  // üîπ G·ªçi API ngay sau khi k·∫øt n·ªëi th√†nh c√¥ng
  checkAndSendSMS();
}

// ================== LOOP ==================
void loop()
{
  if (millis() - lastCheckTime > checkInterval)
  {
    lastCheckTime = millis();
    checkAndSendSMS();
  }

  // X·ª≠ l√Ω nh·∫•p nh√°y LED khi l·ªói module 4G
  if (blinkLed)
  {
    if (millis() - lastBlinkTime > 500)
    {
      lastBlinkTime = millis();
      ledState = !ledState;
      digitalWrite(LED_PIN, ledState);
    }
  }
}
